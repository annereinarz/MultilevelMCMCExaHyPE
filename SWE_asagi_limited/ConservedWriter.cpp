// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "ConservedWriter.h"
#include "initandsoon_extern.h"

SWE::ConservedWriter::ConservedWriter(SWE::MySWESolver& solver) {
  // @TODO Please insert your code here.
}

SWE::ConservedWriter::~ConservedWriter() {
}

void SWE::ConservedWriter::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void SWE::ConservedWriter::finishPlotting() {
  // @TODO Please insert your code here.
}

void SWE::ConservedWriter::mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* const Q,
    double* const outputQuantities,
    double timeStamp
) {
  for (int i=0; i<5; i++){
	outputQuantities[i] = 0.0;
  } 
  if(muq::subcommunicator_rank>3 && muq::subcommunicator_rank<=7){
  const int writtenUnknowns = 5;
  for (int i=0; i<4; i++){ 
	if(!isnan(Q[i]))
			outputQuantities[i] = Q[i];
  }
  if(Q[3] < 0.0)
	if(!isnan(Q[0]+Q[3]))
			outputQuantities[4] = Q[0] + Q[3];
}
}
